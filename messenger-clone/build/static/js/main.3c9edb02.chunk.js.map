{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","App","useState","input","setInput","messages","setMessage","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","Input","placeholder","value","onChange","e","target","IconButton","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAsBeA,G,MAnBDC,sBAAW,WAAoBC,GAAQ,IAA1BC,EAAyB,EAAzBA,QACjBC,EAD0C,EAAjBC,WACPF,EAAQE,SAChC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,gBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAQ,eAAe,gBAAxC,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACAC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHV,WAINR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MAJO,IAIgDF,EAAQA,qB,QCAtEU,EAXaC,IAASC,cAAc,CAElCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAIMC,Y,iCCoDNC,MAvDf,WAAgB,IAAD,EACUC,mBAAS,IADnB,mBACNC,EADM,KACAC,EADA,OAEcF,mBAAS,IAFvB,mBAEPG,EAFO,KAEEC,EAFF,OAGeJ,mBAAS,IAHxB,mBAGPnB,EAHO,KAGEwB,EAHF,KA4Bb,OArBAC,qBAAU,WAERjB,EAAGkB,WAAW,YAAYC,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC/DN,EAAWM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAG,CAACC,GAAID,EAAIC,GAAInC,QAAQkC,EAAIE,iBAG9D,IACFT,qBAAU,WACPD,EAAYW,OAAO,+BACpB,IAaA,sBAAKlC,UAAU,MAAf,UACA,qBAAKmC,IAAI,+FACR,2CACA,0CAAapC,KACb,sBAAMC,UAAU,WAAhB,SACE,eAACoC,EAAA,EAAD,CAAapC,UAAU,kBAAvB,UAEC,cAACqC,EAAA,EAAD,CAAOrC,UAAU,YAAYsC,YAAY,qBAAqBC,MAAOpB,EAAOqB,SAAU,SAAAC,GAAC,OAAErB,EAASqB,EAAEC,OAAOH,UAC/G,cAACI,EAAA,EAAD,CAAY3C,UAAU,iBAAiB4C,UAAWzB,EAAO0B,QAnBzC,SAACJ,GACjBA,EAAEK,iBACFvC,EAAGkB,WAAW,YAAYsB,IAAI,CAC5BlD,QAAQsB,EACRpB,SAASA,EACTiD,UAAUxC,IAASQ,UAAUiC,WAAWC,oBAG1C9B,EAAS,KAWsE+B,KAAK,SAAS/C,MAAM,UAAUC,QAAQ,YAArH,SACE,cAAC,IAAD,WAKN,cAAC,IAAD,UAEOgB,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAGnC,EAAL,EAAKA,QAAL,OACX,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCmC,YC5CRoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3c9edb02.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React, { forwardRef } from 'react'\r\nimport './Message.css'\r\nconst Message=forwardRef(({message,username},ref) =>{\r\n    const isUser=username===message.username;\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message_user'}`}>\r\n            <Card className={isUser ?\"message_user\":\"message_guest\"}>\r\n                <CardContent >\r\n                    <Typography\r\n                    color=\"white\"\r\n                    variant=\"h5\"\r\n                    component=\"h2\">\r\n            {!isUser && `${message.username || 'Unknown User'}: `} {message.message}\r\n            </Typography>\r\n            </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n}\r\n)\r\nexport default Message\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseApp =firebase.initializeApp({\r\n \r\n        apiKey: \"AIzaSyCdaZauz1vNkQ3Hn94z1S_cTsb7Zq7wh10\",\r\n        authDomain: \"messenger-react-2617f.firebaseapp.com\",\r\n        projectId: \"messenger-react-2617f\",\r\n        storageBucket: \"messenger-react-2617f.appspot.com\",\r\n        messagingSenderId: \"872827884648\",\r\n        appId: \"1:872827884648:web:4c4a207cb59d10386ad7dd\"\r\n      \r\n});\r\n\r\nconst db=firebaseApp.firestore();\r\n\r\nexport {db};","import React,{useState,useEffect} from 'react'\nimport './App.css';\nimport {FormControl,Input} from '@material-ui/core'\nimport Message from './Message'\nimport { db } from './firebase';\nimport firebase from 'firebase'\nimport FlipMove from 'react-flip-move'\nimport  '@fortawesome/free-brands-svg-icons'\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\nfunction App() {\n  const [input,setInput]=useState('');\n  const[messages,setMessage]=useState([]);\n  const[username,setUsername]=useState('');\n \n  //useState = variable in REACT\n  //useEffect = run code on a condition in REACT\n  useEffect(()=>{\n    //run when the app component loads...\n    db.collection('messages').orderBy('timestamp','desc').onSnapshot(snapshot=>{\n      setMessage(snapshot.docs.map(doc=>({id: doc.id ,message:doc.data()})))\n\n    })\n  },[])\n  useEffect(()=>{\n     setUsername(prompt('Please Enter Your Name..'));\n  },[])//condition\n  \n  const sendMessage=(e)=>{\n    e.preventDefault();\n    db.collection('messages').add({\n      message:input,\n      username:username,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n    })\n   \n    setInput('');\n  }\n  return (\n    <div className=\"App\">\n    <img src=\"https://facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\"/>\n     <h1>Messenger</h1>\n     <h2>Welcome {username}</h2>\n     <form className=\"app_form\">\n       <FormControl className=\"app_formControl\">\n         \n        <Input className=\"app_Input\" placeholder='Enter a message...' value={input} onChange={e=>setInput(e.target.value)}/>\n    <IconButton className=\"app_IconButton\" disabled={!input} onClick={sendMessage} type=\"submit\" color=\"primary\" variant='contained'> \n      <SendIcon/>\n    </IconButton>\n   \n</FormControl>\n</form>\n<FlipMove>\n     {\n       messages.map(({id,message})=>(\n         <Message key={id} username={username} message={message}/>\n         \n       ))\n     }\n     </FlipMove>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}